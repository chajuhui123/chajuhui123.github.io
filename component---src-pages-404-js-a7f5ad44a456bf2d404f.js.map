{"version":3,"file":"component---src-pages-404-js-a7f5ad44a456bf2d404f.js","mappings":"uJAwCA,IArCe,SAAHA,GAAuC,IAAjCC,EAAQD,EAARC,SAAiBC,GAAFF,EAALG,MAAeH,EAARE,UAE3BE,EAD6B,MAChBH,EAASI,SAiB5B,OACEC,EAAAA,cAAA,WACEA,EAAAA,cAACC,EAAAA,KAAI,CAACC,GAAG,KACPF,EAAAA,cAAA,UAAQG,UAAU,mBAGpBH,EAAAA,cAAA,OAAKG,UAAU,iBAAiB,oBAAmBL,GACjDE,EAAAA,cAAA,YAAOJ,GACPI,EAAAA,cAAA,cAAQ,MACH,IAAII,MAAOC,cAAc,eAC5B,IACAL,EAAAA,cAAA,KAAGM,KAAK,4BAA2B,YAK7C,C,+CC3BMC,EAAM,SAAHb,GAAgD,IAADc,EAAAC,EAAAC,EAAzCC,EAAWjB,EAAXiB,YAAmBd,GAAFH,EAAJkB,KAAWlB,EAALG,OAAOD,EAAQF,EAARE,SAC/BiB,GAASC,EAAAA,EAAAA,gBAAe,cAAxBD,KAgBFE,EAAkBJ,GAAeE,EAAKG,aAAaL,YACnDM,EAAgC,QAApBT,EAAGK,EAAKG,oBAAY,IAAAR,OAAA,EAAjBA,EAAmBX,MAExC,OACEG,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQiB,EAAkBpB,EAAK,MAAMoB,EAAiBpB,GACtDG,EAAAA,cAAA,QAAMkB,KAAK,cAAcC,QAASJ,IAClCf,EAAAA,cAAA,QAAMoB,SAAS,WAAWD,QAAStB,IACnCG,EAAAA,cAAA,QAAMoB,SAAS,iBAAiBD,QAASJ,IACzCf,EAAAA,cAAA,QAAMoB,SAAS,UAAUD,QAAQ,YACjCnB,EAAAA,cAAA,QAAMkB,KAAK,eAAeC,QAAQ,YAClCnB,EAAAA,cAAA,QACEkB,KAAK,kBACLC,SAA0B,QAAjBV,EAAAI,EAAKG,oBAAY,IAAAP,GAAQ,QAARC,EAAjBD,EAAmBY,cAAM,IAAAX,OAAR,EAAjBA,EAA2BY,UAAO,KAE7CtB,EAAAA,cAAA,QAAMkB,KAAK,gBAAgBC,QAAStB,IACpCG,EAAAA,cAAA,QAAMkB,KAAK,sBAAsBC,QAASJ,IACzCnB,EAGP,EAEAW,EAAIgB,aAAe,CACjBZ,YAAY,IAQd,K,kGC1Caa,EAAO,WAAH,OAASxB,EAAAA,cAACO,EAAAA,EAAG,CAACV,MAAM,kBAAmB,EAExD,UAbqB,SAAHH,GAA4B,IAAtB+B,EAAI/B,EAAJ+B,KAAM9B,EAAQD,EAARC,SACtB+B,EAAYD,EAAKZ,KAAKG,aAAanB,MAEzC,OACEG,EAAAA,cAAC2B,EAAAA,EAAM,CAAChC,SAAUA,EAAUE,MAAO6B,GACjC1B,EAAAA,cAAA,UAAI,kBACJA,EAAAA,cAAA,SAAG,2DAGT,C","sources":["webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/pages/404.js"],"sourcesContent":["import * as React from \"react\";\r\nimport { Link } from \"gatsby\";\r\n\r\nconst Layout = ({ location, title, children }) => {\r\n  const rootPath = `${__PATH_PREFIX__}/`;\r\n  const isRootPath = location.pathname === rootPath;\r\n  // let header;\r\n\r\n  // if (isRootPath) {\r\n  //   header = (\r\n  //     <h1 className=\"main-heading\">\r\n  //       <Link to=\"/\"></Link>\r\n  //     </h1>\r\n  //   );\r\n  // } else {\r\n  //   header = (\r\n  //     <Link className=\"header-link-home\" to=\"/\">\r\n  //       {/* {title} */}\r\n  //     </Link>\r\n  //   );\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      <Link to=\"/\">\r\n        <header className=\"global-header\" />\r\n        {/* <header className=\"global-header\">{header}</header> */}\r\n      </Link>\r\n      <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\r\n        <main>{children}</main>\r\n        <footer>\r\n          Â© {new Date().getFullYear()}, Built with\r\n          {` `}\r\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst Seo = ({ description, lang, title, children }) => {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            social {\r\n              twitter\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta\r\n        name=\"twitter:creator\"\r\n        content={site.siteMetadata?.social?.twitter || ``}\r\n      />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nSeo.defaultProps = {\r\n  description: ``,\r\n}\r\n\r\nSeo.propTypes = {\r\n  description: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Seo\r\n","import * as React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\nconst NotFoundPage = ({ data, location }) => {\r\n  const siteTitle = data.site.siteMetadata.title\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <h1>404: Not Found</h1>\r\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const Head = () => <Seo title=\"404: Not Found\" />\r\n\r\nexport default NotFoundPage\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["_ref","location","children","title","isRootPath","pathname","React","Link","to","className","Date","getFullYear","href","Seo","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","description","lang","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","social","twitter","defaultProps","Head","data","siteTitle","Layout"],"sourceRoot":""}