{"version":3,"file":"component---src-pages-404-js-a7f5ad44a456bf2d404f.js","mappings":"uJAwCA,IArCe,SAAHA,GAAuC,IAAjCC,EAAQD,EAARC,SAAiBC,GAAFF,EAALG,MAAeH,EAARE,UAE3BE,EAD6B,MAChBH,EAASI,SAiB5B,OACEC,EAAAA,cAAA,WACEA,EAAAA,cAACC,EAAAA,KAAI,CAACC,GAAG,KACPF,EAAAA,cAAA,UAAQG,UAAU,mBAGpBH,EAAAA,cAAA,OAAKG,UAAU,iBAAiB,oBAAmBL,GACjDE,EAAAA,cAAA,YAAOJ,GACPI,EAAAA,cAAA,cAAQ,MACH,IAAII,MAAOC,cAAc,eAC5B,IACAL,EAAAA,cAAA,KAAGM,KAAK,4BAA2B,YAK7C,C,+CC3BMC,EAAM,SAAHb,GAAgD,IAADc,EAAAC,EAAAC,EAAzCC,EAAWjB,EAAXiB,YAAmBd,GAAFH,EAAJkB,KAAWlB,EAALG,OAAOD,EAAQF,EAARE,SAC/BiB,GAASC,EAAAA,EAAAA,gBAAe,cAAxBD,KAgBFE,EAAkBJ,GAAeE,EAAKG,aAAaL,YACnDM,EAAgC,QAApBT,EAAGK,EAAKG,oBAAY,IAAAR,OAAA,EAAjBA,EAAmBX,MAExC,OACEG,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQiB,EAAkBpB,EAAK,MAAMoB,EAAiBpB,GACtDG,EAAAA,cAAA,QAAMkB,KAAK,cAAcC,QAASJ,IAClCf,EAAAA,cAAA,QAAMoB,SAAS,WAAWD,QAAStB,IACnCG,EAAAA,cAAA,QAAMoB,SAAS,iBAAiBD,QAASJ,IACzCf,EAAAA,cAAA,QAAMoB,SAAS,UAAUD,QAAQ,YACjCnB,EAAAA,cAAA,QAAMkB,KAAK,eAAeC,QAAQ,YAClCnB,EAAAA,cAAA,QACEkB,KAAK,kBACLC,SAA0B,QAAjBV,EAAAI,EAAKG,oBAAY,IAAAP,GAAQ,QAARC,EAAjBD,EAAmBY,cAAM,IAAAX,OAAR,EAAjBA,EAA2BY,UAAO,KAE7CtB,EAAAA,cAAA,QAAMkB,KAAK,gBAAgBC,QAAStB,IACpCG,EAAAA,cAAA,QAAMkB,KAAK,sBAAsBC,QAASJ,IACzCnB,EAGP,EAEAW,EAAIgB,aAAe,CACjBZ,YAAY,IAQd,K,kGC1Caa,EAAO,WAAH,OAASxB,EAAAA,cAACO,EAAAA,EAAG,CAACV,MAAM,kBAAmB,EAExD,UAbqB,SAAHH,GAA4B,IAAtB+B,EAAI/B,EAAJ+B,KAAM9B,EAAQD,EAARC,SACtB+B,EAAYD,EAAKZ,KAAKG,aAAanB,MAEzC,OACEG,EAAAA,cAAC2B,EAAAA,EAAM,CAAChC,SAAUA,EAAUE,MAAO6B,GACjC1B,EAAAA,cAAA,UAAI,kBACJA,EAAAA,cAAA,SAAG,2DAGT,C","sources":["webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/pages/404.js"],"sourcesContent":["import * as React from \"react\";\nimport { Link } from \"gatsby\";\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`;\n  const isRootPath = location.pathname === rootPath;\n  // let header;\n\n  // if (isRootPath) {\n  //   header = (\n  //     <h1 className=\"main-heading\">\n  //       <Link to=\"/\"></Link>\n  //     </h1>\n  //   );\n  // } else {\n  //   header = (\n  //     <Link className=\"header-link-home\" to=\"/\">\n  //       {/* {title} */}\n  //     </Link>\n  //   );\n  // }\n\n  return (\n    <div>\n      <Link to=\"/\">\n        <header className=\"global-header\" />\n        {/* <header className=\"global-header\">{header}</header> */}\n      </Link>\n      <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n        <main>{children}</main>\n        <footer>\n          Â© {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n        </footer>\n      </div>\n    </div>\n  );\n};\n\nexport default Layout;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, lang, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nSeo.defaultProps = {\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst NotFoundPage = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <h1>404: Not Found</h1>\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </Layout>\n  )\n}\n\nexport const Head = () => <Seo title=\"404: Not Found\" />\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"names":["_ref","location","children","title","isRootPath","pathname","React","Link","to","className","Date","getFullYear","href","Seo","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","description","lang","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","social","twitter","defaultProps","Head","data","siteTitle","Layout"],"sourceRoot":""}