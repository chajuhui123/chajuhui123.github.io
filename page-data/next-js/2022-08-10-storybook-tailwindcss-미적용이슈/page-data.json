{"componentChunkName":"component---src-templates-blog-post-js","path":"/next-js/2022-08-10-storybook-tailwindcss-미적용이슈/","result":{"data":{"site":{"siteMetadata":{"title":""}},"markdownRemark":{"id":"83effaf7-6af1-57e6-aa4d-048f0f3a0172","excerpt":"Storybook은 프론트에서 작업한 컴포넌트를 관리하고 테스트하기 위해 도입한 기술입니다. 디자이너와의 소통을 원활하게 해주고 프론트 팀의 작업물을 팀 구성원들이 쉽게 관리할 수 있도록 돕습니다. 최근 프로젝트에서 tailwind css 를 도입하였는데, 해당 기술이 Storybook…","html":"<p>Storybook은 프론트에서 작업한 컴포넌트를 관리하고 테스트하기 위해 도입한 기술입니다. 디자이너와의 소통을 원활하게 해주고 프론트 팀의 작업물을 팀 구성원들이 쉽게 관리할 수 있도록 돕습니다. 최근 프로젝트에서 tailwind css 를 도입하였는데, 해당 기술이 Storybook 에 적용되지 않는 이슈가 있었습니다.</p>\n<p>이 게시물에서는 storybook 을 처음부터 셋팅하는 과정보다는 제가 이슈를 해결한 과정을 정리하려고 합니다.</p>\n<hr>\n<h2>1. Preview.js 에서 tailwind css 코드가 적용되어있는 css 파일을 import</h2>\n<p>첫 번째로 시도한 방식은 preview.js 에서도 tailwind css 셋팅이 적용되어있는 global css 파일을 import 하는 것입니다. storybook 환경에도 tailwind 셋팅이 필요하기에 임포트를 해와 영향력을 줍니다. 하지만 이 방법으로는 문제를 해결하지 못했습니다.</p>\n<p><code class=\"language-text\">.storybook/preview.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token string\">\"../styles/globals.css\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-text\">styles/globals.css</code></p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">@tailwind base<span class=\"token punctuation\">;</span>\r\n@tailwind components<span class=\"token punctuation\">;</span>\r\n@tailwind utilities<span class=\"token punctuation\">;</span></code></pre></div>\n<h2>2. post css add-ons 버전 이슈</h2>\n<p>tailwindcss 가 적용되려면 post-css 패키지를 적용해, 프로젝트의 css를 미리 빌드하여 storybook에 적용해야합니다. 해당 패키지를 다운받고 storybook에 다음과 같이 셋팅을 해주었습니다. 또한 이 문서를 참고하였습니다. <a href=\"https://theodorusclarence.com/blog/nextjs-storybook-tailwind\">https://theodorusclarence.com/blog/nextjs-storybook-tailwind</a></p>\n<p><code class=\"language-text\">.storybook/main.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"path\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token literal-property property\">stories</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"../src/**/*.stories.mdx\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"../src/**/*.stories.@(js|jsx|ts|tsx)\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token literal-property property\">addons</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\r\n    <span class=\"token string\">\"@storybook/addon-links\"</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token string\">\"@storybook/addon-essentials\"</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token string\">\"@storybook/addon-interactions\"</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token string\">\"storybook-addon-next-router\"</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token comment\">// post css 패키지 적용</span>\r\n    <span class=\"token punctuation\">{</span>\r\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"@storybook/addon-postcss\"</span><span class=\"token punctuation\">,</span>\r\n      <span class=\"token literal-property property\">options</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token literal-property property\">postcssLoaderOptions</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n          <span class=\"token literal-property property\">implementation</span><span class=\"token operator\">:</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"postcss\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token literal-property property\">framework</span><span class=\"token operator\">:</span> <span class=\"token string\">\"@storybook/react\"</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token literal-property property\">core</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token literal-property property\">builder</span><span class=\"token operator\">:</span> <span class=\"token string\">\"@storybook/builder-webpack5\"</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>셋팅 후 스토리북 환경을 켜보니 storybook 빌드 상태가 99% 에서 진전이 되지 않았습니다. (<code class=\"language-text\">99% done plugins webpack-hot-middlewarewebpack built preview b15e0ed4179d6dceff64 in 3202ms</code>)</p>\n<p>찾아보니, 해당 이슈는 위에서 사용하였던 <code class=\"language-text\">@storybook/addon-postcss</code> 의 버전 이슈였습니다.</p>\n<p>postcss 버전이 3.x.x-alpha 버전이였는데 <code class=\"language-text\">2.0.0</code> 으로 stable 한 버전을 사용하면 이 이슈를 해결할 수 있다고 하였습니다.</p>\n<p><code class=\"language-text\">pacakge.json</code></p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token property\">\"@storybook/addon-postcss\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2.0.0\"</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>이를 통해 Storybook에 tailwind css 가 미적용되었던 이슈를 해결하였습니다 :D</p>\n<p>이제 Storybook에 static 한 이미지를 올릴 수 있도록 셋팅을 하러갈 것입니다.</p>","frontmatter":{"title":"NextJS Storybook 환경에서 Tailwind css 미적용 이슈 해결하기","category":"NextJS","date":"August 10, 2022","description":null}},"previous":{"fields":{"slug":"/docker/2022-07-09_이미지와컨테이너/"},"frontmatter":{"title":"도커 시작하기 : 서버 구축을 위한 주요 명령어 및 옵션 정리"}},"next":{"fields":{"slug":"/front/2022-10-06-CSR과SSR/"},"frontmatter":{"title":"SSR은 왜 주목받고 있을까?"}}},"pageContext":{"id":"83effaf7-6af1-57e6-aa4d-048f0f3a0172","previousPostId":"4a8fa37f-571c-561d-baa3-346e57896ac9","nextPostId":"1a8b5421-80aa-5b42-9259-e67d8c3d8e7d"}},"staticQueryHashes":["2841359383","3274528899"]}