{"version":3,"file":"component---src-pages-index-js-9a9ec7b774df4cf892f9.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/category.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["import * as React from \"react\";\n\nconst Category = ({ categories, selectedCategory, handleChangeCategory }) => {\n  return (\n    <ul className=\"category-wrapper\">\n      <CategoryItem\n        selectedCategory={selectedCategory}\n        category=\"ALL\"\n        onClick={() => handleChangeCategory(\"ALL\")}\n      />\n\n      {categories.map((category, idx) => (\n        <CategoryItem\n          key={idx}\n          selectedCategory={selectedCategory}\n          category={category}\n          onClick={() => handleChangeCategory(category)}\n        />\n      ))}\n    </ul>\n  );\n};\n\nconst CategoryItem = ({ selectedCategory, category, onClick }) => {\n  return (\n    <div\n      className={\n        selectedCategory === category\n          ? \"category-item selected\"\n          : \"category-item non-selected\"\n      }\n      onClick={onClick}\n    >\n      <li>{category}</li>\n    </div>\n  );\n};\n\nexport default Category;\n","import React, { useMemo, useState } from \"react\";\nimport { Link, graphql } from \"gatsby\";\nimport Bio from \"../components/bio\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport Tag from \"../components/tag\";\nimport Category from \"../components/category\";\n\nconst BlogIndex = ({ data, location }) => {\n  const [selectedCategory, setSelectedCategory] = useState(\"ALL\");\n\n  const siteTitle = data.site.siteMetadata?.title || `Title`;\n  const posts = data.allMarkdownRemark.nodes;\n\n  const categories = useMemo(\n    () => [...new Set(posts.map((node) => node.frontmatter.category))],\n    []\n  );\n\n  const handleChangeCategory = (select) => {\n    if (!categories.includes(select)) {\n      setSelectedCategory(\"ALL\");\n      return;\n    }\n    setSelectedCategory(select);\n  };\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Bio />\n        <p>포스팅이 존재하지 않습니다 😢</p>\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Bio />\n\n      <Category\n        categories={categories}\n        selectedCategory={selectedCategory}\n        handleChangeCategory={handleChangeCategory}\n      />\n\n      <ol style={{ listStyle: `none` }}>\n        {posts.map((post) => {\n          if (\n            selectedCategory !== \"ALL\" &&\n            selectedCategory !== post.frontmatter.category\n          )\n            return;\n\n          const title = post.frontmatter.title || post.fields.slug;\n          const date = new Date(post.frontmatter.date);\n          const formattedDate = `${date.getFullYear()}년 ${\n            date.getMonth() + 1\n          }월 ${date.getDate()}일`;\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <div style={{ marginBottom: \"10px\" }}>\n                    <Tag category={post.frontmatter.category} />\n                  </div>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span className=\"underline gray\" itemProp=\"headline\">\n                        {title}\n                      </span>\n                    </Link>\n                  </h2>\n\n                  <small>{formattedDate}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          );\n        })}\n      </ol>\n    </Layout>\n  );\n};\n\nexport default BlogIndex;\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = () => <Seo title=\"JOY DEVLOG\" />;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          category\n          description\n        }\n      }\n    }\n  }\n`;\n"],"names":["CategoryItem","_ref2","selectedCategory","category","onClick","React","className","_ref","categories","handleChangeCategory","map","idx","key","_data$site$siteMetada","data","location","_useState","useState","setSelectedCategory","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","nodes","useMemo","_toConsumableArray","Set","node","frontmatter","length","Layout","Bio","Category","select","includes","style","listStyle","post","fields","slug","date","Date","formattedDate","getFullYear","getMonth","getDate","itemScope","itemType","marginBottom","Tag","Link","to","itemProp","dangerouslySetInnerHTML","__html","description","excerpt","Head","Seo"],"sourceRoot":""}