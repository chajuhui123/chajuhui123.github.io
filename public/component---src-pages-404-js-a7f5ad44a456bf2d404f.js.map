{"version":3,"file":"component---src-pages-404-js-a7f5ad44a456bf2d404f.js","mappings":"uJAwCA,IArCe,SAAC,GAAmC,IAAjCA,EAAgC,EAAhCA,SAAiBC,GAAe,EAAtBC,MAAsB,EAAfD,UAE3BE,EADQ,MACKH,EAASI,SAiB5B,OACE,2BACE,gBAAC,EAAAC,KAAD,CAAMC,GAAG,KACP,0BAAQC,UAAU,mBAGpB,uBAAKA,UAAU,iBAAiB,oBAAmBJ,GACjD,4BAAOF,GACP,oCACK,IAAIO,MAAOC,cADhB,mBAGE,qBAAGC,KAAK,4BAAR,YAKT,C,+CC3BKC,EAAM,SAAC,GAA4C,IAAD,MAAzCC,EAAyC,EAAzCA,YAAmBV,GAAsB,EAA5BW,KAA4B,EAAtBX,OAAOD,EAAe,EAAfA,SAC/Ba,GAASC,EAAAA,EAAAA,gBAAe,cAAxBD,KAgBFE,EAAkBJ,GAAeE,EAAKG,aAAaL,YACnDM,EAAY,UAAGJ,EAAKG,oBAAR,aAAG,EAAmBf,MAExC,OACE,gCACE,6BAAQgB,EAAkBhB,EAAN,MAAiBgB,EAAiBhB,GACtD,wBAAMiB,KAAK,cAAcC,QAASJ,IAClC,wBAAMK,SAAS,WAAWD,QAASlB,IACnC,wBAAMmB,SAAS,iBAAiBD,QAASJ,IACzC,wBAAMK,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBACED,KAAK,kBACLC,SAAS,UAAAN,EAAKG,oBAAL,mBAAmBK,cAAnB,eAA2BC,UAA3B,KAEX,wBAAMJ,KAAK,gBAAgBC,QAASlB,IACpC,wBAAMiB,KAAK,sBAAsBC,QAASJ,IACzCf,EAGN,EAEDU,EAAIa,aAAe,CACjBZ,YAAY,IAQd,K,kGC1Caa,EAAO,kBAAM,gBAAC,IAAD,CAAKvB,MAAM,kBAAjB,EAEpB,UAbqB,SAAC,GAAwB,IAAtBwB,EAAqB,EAArBA,KAAM1B,EAAe,EAAfA,SACtB2B,EAAYD,EAAKZ,KAAKG,aAAaf,MAEzC,OACE,gBAAC,IAAD,CAAQF,SAAUA,EAAUE,MAAOyB,GACjC,4CACA,oFAGL,C","sources":["webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/pages/404.js"],"sourcesContent":["import * as React from \"react\";\r\nimport { Link } from \"gatsby\";\r\n\r\nconst Layout = ({ location, title, children }) => {\r\n  const rootPath = `${__PATH_PREFIX__}/`;\r\n  const isRootPath = location.pathname === rootPath;\r\n  let header;\r\n\r\n  // if (isRootPath) {\r\n  //   header = (\r\n  //     <h1 className=\"main-heading\">\r\n  //       <Link to=\"/\"></Link>\r\n  //     </h1>\r\n  //   );\r\n  // } else {\r\n  //   header = (\r\n  //     <Link className=\"header-link-home\" to=\"/\">\r\n  //       {/* {title} */}\r\n  //     </Link>\r\n  //   );\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      <Link to=\"/\">\r\n        <header className=\"global-header\" />\r\n        {/* <header className=\"global-header\">{header}</header> */}\r\n      </Link>\r\n      <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\r\n        <main>{children}</main>\r\n        <footer>\r\n          Â© {new Date().getFullYear()}, Built with\r\n          {` `}\r\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst Seo = ({ description, lang, title, children }) => {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            social {\r\n              twitter\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta\r\n        name=\"twitter:creator\"\r\n        content={site.siteMetadata?.social?.twitter || ``}\r\n      />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nSeo.defaultProps = {\r\n  description: ``,\r\n}\r\n\r\nSeo.propTypes = {\r\n  description: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Seo\r\n","import * as React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\nconst NotFoundPage = ({ data, location }) => {\r\n  const siteTitle = data.site.siteMetadata.title\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <h1>404: Not Found</h1>\r\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const Head = () => <Seo title=\"404: Not Found\" />\r\n\r\nexport default NotFoundPage\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["location","children","title","isRootPath","pathname","Link","to","className","Date","getFullYear","href","Seo","description","lang","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","social","twitter","defaultProps","Head","data","siteTitle"],"sourceRoot":""}