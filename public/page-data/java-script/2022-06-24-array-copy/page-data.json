{"componentChunkName":"component---src-templates-blog-post-js","path":"/java-script/2022-06-24-array-copy/","result":{"data":{"site":{"siteMetadata":{"title":""}},"markdownRemark":{"id":"5f64798a-bf52-5058-9427-ec805c1c9875","excerpt":"객체의 복사는 얕은 복사 shallow copy 와 깊은 복사 Deep copy…","html":"<p>객체의 복사는 얕은 복사 shallow copy 와 깊은 복사 Deep copy 로 나눌 수 있다.</p>\n<p>그리고 자바스크립트에서 값은 원시값과 참조값으로 나눌 수 있다.</p>\n<p>원시값 <code class=\"language-text\">Number</code> <code class=\"language-text\">String</code> <code class=\"language-text\">Boolean</code> <code class=\"language-text\">Null</code> <code class=\"language-text\">Undefined</code></p>\n<p>참조값 <code class=\"language-text\">Object</code> <code class=\"language-text\">Symbol</code></p>\n<p>둘의 차이점은 복사될 때 서로에게 **‘영향을 주는가’**이다.</p>\n<p>원시값을 복사할 때 복사된 값을 다른 메모리에 할당한다. 즉 원래 값과 복사된 값이 서로에게 영향을 미치지 않는다.</p>\n<p>하지만 참조값은 변수가 <strong>객체의 주소를 가리키는</strong> 값이기 때문에 복사된 값이 같은 값을 가리킨다.</p>\n<hr>\n<p>따라서 객체를 복사하는 방법은 크게 두 가지(얕은 복사 Shallow Copy, 깊은 복사 Deep Copy)로 나눌 수 있다.</p>\n<h2>1. 얕은 복사 Shallow Copy</h2>\n<p>얕은 복사란 객체를 복사할 때, 원래값과 복사된 값이 같은 참조를 가리키고있는 것을 말한다.</p>\n<p>객체안에 객체가 있을 경우 한개의 객체라도 원본 객체를 참조하고 있다면 이를 <code class=\"language-text\">얕은 복사</code>라고 한다.</p>\n<h3>Object.assign()</h3>\n<p>Object.assign은 첫 번째 인자로 들어온 객체에 두 번째 인자로 들어온 객체를 복사한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token literal-property property\">a</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token literal-property property\">b</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token literal-property property\">c</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">const</span> copiedObj <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> obj<span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\">// {} 객체에 obj 객체를 복사</span>\r\n\r\ncopiedObj<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">.</span>c <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\r\n\r\nobj <span class=\"token operator\">===</span> copiedObj <span class=\"token comment\">// false</span>\r\nobj<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">.</span>c <span class=\"token operator\">===</span> copiedObj<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">.</span>c <span class=\"token comment\">// true</span></code></pre></div>\n<h3>전개연산자</h3>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token literal-property property\">a</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token literal-property property\">b</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token literal-property property\">c</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">const</span> copiedObj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>obj <span class=\"token punctuation\">}</span>\r\n\r\ncopiedObj<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">.</span>c <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\r\n\r\nobj <span class=\"token operator\">===</span> copiedObj <span class=\"token comment\">// false</span>\r\nobj<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">.</span>c <span class=\"token operator\">===</span> copiedObj<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">.</span>c <span class=\"token comment\">// true</span></code></pre></div>\n<h2>2. 깊은 복사 Deep Copy</h2>\n<p>깊은 복사된 객체는 객체안에 객체가 있을 경우에도 원본과의 참조가 완전히 끊어진 객체를 말한다.</p>\n<h3>재귀함수를 이용한 복사</h3>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token literal-property property\">a</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token literal-property property\">b</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token literal-property property\">c</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">function</span> <span class=\"token function\">copyObj</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">obj</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\r\n\r\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> key <span class=\"token keyword\">in</span> obj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> obj<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token string\">'object'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n      result<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">copyObj</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\r\n      result<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span>\r\n    <span class=\"token punctuation\">}</span>\r\n  <span class=\"token punctuation\">}</span>\r\n\r\n  <span class=\"token keyword\">return</span> result\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">const</span> copiedObj <span class=\"token operator\">=</span> <span class=\"token function\">copyObj</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span>\r\n\r\ncopiedObj<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">.</span>c <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\r\n\r\nobj<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">.</span>c <span class=\"token operator\">===</span> copiedObj<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">.</span>c <span class=\"token comment\">//false</span></code></pre></div>","frontmatter":{"title":"얕은 복사(Shallow copy) VS 깊은 복사 (Deep Copy)","date":"June 24, 2022","description":null}},"previous":{"fields":{"slug":"/react/2022-06-15_react-query-mutation/"},"frontmatter":{"title":"[React Query] Mutation 정리하기"}},"next":{"fields":{"slug":"/web/2022-06-25_network/"},"frontmatter":{"title":"네트워크 통신"}}},"pageContext":{"id":"5f64798a-bf52-5058-9427-ec805c1c9875","previousPostId":"4845262f-cf57-5c51-b921-8feaf3cf6daf","nextPostId":"2db7262f-e2be-5b2b-bee0-95b325f87146"}},"staticQueryHashes":["2841359383","3274528899"]}