{"version":3,"file":"component---src-pages-using-typescript-tsx.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/pages/using-typescript.tsx","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\r\nimport * as React from \"react\"\r\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\ntype DataProps = {\r\n  site: {\r\n    buildTime: string\r\n  }\r\n}\r\n\r\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\r\n  data,\r\n  path,\r\n  location,\r\n}) => (\r\n  <Layout title=\"Using TypeScript\" location={location}>\r\n    <h1>Gatsby supports TypeScript by default!</h1>\r\n    <p>\r\n      This means that you can create and write <em>.ts/.tsx</em> files for your\r\n      pages, components etc. Please note that the <em>gatsby-*.js</em> files\r\n      (like gatsby-node.js) currently don't support TypeScript yet.\r\n    </p>\r\n    <p>\r\n      For type checking you'll want to install <em>typescript</em> via npm and\r\n      run <em>tsc --init</em> to create a <em>tsconfig</em> file.\r\n    </p>\r\n    <p>\r\n      You're currently on the page \"{path}\" which was built on{\" \"}\r\n      {data.site.buildTime}.\r\n    </p>\r\n    <p>\r\n      To learn more, head over to our{\" \"}\r\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\r\n        documentation about TypeScript\r\n      </a>\r\n      .\r\n    </p>\r\n    <Link to=\"/\">Go back to the homepage</Link>\r\n  </Layout>\r\n)\r\n\r\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\r\n\r\nexport default UsingTypescript\r\n\r\nexport const query = graphql`\r\n  {\r\n    site {\r\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\r\n    }\r\n  }\r\n`\r\n","import * as React from \"react\";\r\nimport { Link } from \"gatsby\";\r\n\r\nconst Layout = ({ location, title, children }) => {\r\n  const rootPath = `${__PATH_PREFIX__}/`;\r\n  const isRootPath = location.pathname === rootPath;\r\n  let header;\r\n\r\n  // if (isRootPath) {\r\n  //   header = (\r\n  //     <h1 className=\"main-heading\">\r\n  //       <Link to=\"/\"></Link>\r\n  //     </h1>\r\n  //   );\r\n  // } else {\r\n  //   header = (\r\n  //     <Link className=\"header-link-home\" to=\"/\">\r\n  //       {/* {title} */}\r\n  //     </Link>\r\n  //   );\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      <Link to=\"/\">\r\n        <header className=\"global-header\" />\r\n        {/* <header className=\"global-header\">{header}</header> */}\r\n      </Link>\r\n      <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\r\n        <main>{children}</main>\r\n        <footer>\r\n          Â© {new Date().getFullYear()}, Built with\r\n          {` `}\r\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst Seo = ({ description, lang, title, children }) => {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            social {\r\n              twitter\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta\r\n        name=\"twitter:creator\"\r\n        content={site.siteMetadata?.social?.twitter || ``}\r\n      />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nSeo.defaultProps = {\r\n  description: ``,\r\n}\r\n\r\nSeo.propTypes = {\r\n  description: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Seo\r\n"],"names":["React","Link","Layout","Seo","UsingTypescript","data","path","location","title","site","buildTime","href","to","Head","query","children","rootPath","__PATH_PREFIX__","isRootPath","pathname","header","Date","getFullYear","PropTypes","description","lang","metaDescription","siteMetadata","defaultTitle","social","twitter","defaultProps","propTypes","string","isRequired"],"sourceRoot":""}