{"version":3,"file":"component---src-pages-404-js.js","mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;;AAEA,MAAME,MAAM,GAAG,CAAC;EAAEC,QAAF;EAAYC,KAAZ;EAAmBC;AAAnB,CAAD,KAAmC;EAChD,MAAMC,QAAQ,GAAI,GAAEC,EAAgB,GAApC;EACA,MAAMC,UAAU,GAAGL,QAAQ,CAACM,QAAT,KAAsBH,QAAzC,CAFgD,CAGhD;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACE,2EACE,iDAAC,wCAAD;IAAM,EAAE,EAAC;EAAT,gBACE;IAAQ,SAAS,EAAC;EAAlB,EADF,CADF,eAKE;IAAK,SAAS,EAAC,gBAAf;IAAgC,qBAAmBE;EAAnD,gBACE,+DAAOH,QAAP,CADF,eAEE,0EACK,IAAIK,IAAJ,GAAWC,WAAX,EADL,kBAEI,GAFJ,eAGE;IAAG,IAAI,EAAC;EAAR,YAHF,CAFF,CALF,CADF;AAgBD,CAnCD;;AAqCA,iEAAeT,MAAf;;;;;;;;;;;;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAGA,MAAMW,GAAG,GAAG,CAAC;EAAEC,WAAF;EAAeC,IAAf;EAAqBX,KAArB;EAA4BC;AAA5B,CAAD,KAA4C;EAAA;;EACtD,MAAM;IAAEW;EAAF,4EAAN;EAgBA,MAAMC,eAAe,GAAGH,WAAW,IAAIE,IAAI,CAACE,YAAL,CAAkBJ,WAAzD;EACA,MAAMK,YAAY,yBAAGH,IAAI,CAACE,YAAR,uDAAG,mBAAmBd,KAAxC;EAEA,oBACE,iHACE,gEAAQe,YAAY,GAAI,GAAEf,KAAM,MAAKe,YAAa,EAA9B,GAAkCf,KAAtD,CADF,eAEE;IAAM,IAAI,EAAC,aAAX;IAAyB,OAAO,EAAEa;EAAlC,EAFF,eAGE;IAAM,QAAQ,EAAC,UAAf;IAA0B,OAAO,EAAEb;EAAnC,EAHF,eAIE;IAAM,QAAQ,EAAC,gBAAf;IAAgC,OAAO,EAAEa;EAAzC,EAJF,eAKE;IAAM,QAAQ,EAAC,SAAf;IAAyB,OAAO,EAAC;EAAjC,EALF,eAME;IAAM,IAAI,EAAC,cAAX;IAA0B,OAAO,EAAC;EAAlC,EANF,eAOE;IACE,IAAI,EAAC,iBADP;IAEE,OAAO,EAAE,wBAAAD,IAAI,CAACE,YAAL,qGAAmBE,MAAnB,gFAA2BC,OAA3B,KAAuC;EAFlD,EAPF,eAWE;IAAM,IAAI,EAAC,eAAX;IAA2B,OAAO,EAAEjB;EAApC,EAXF,eAYE;IAAM,IAAI,EAAC,qBAAX;IAAiC,OAAO,EAAEa;EAA1C,EAZF,EAaGZ,QAbH,CADF;AAiBD,CArCD;;AAuCAQ,GAAG,CAACS,YAAJ,GAAmB;EACjBR,WAAW,EAAG;AADG,CAAnB;AAIAD,GAAG,CAACU,SAAJ,GAAgB;EACdT,WAAW,EAAEF,0DADC;EAEdR,KAAK,EAAEQ,qEAA2Ba;AAFpB,CAAhB;AAKA,iEAAeZ,GAAf;;;;;;;;;;;;;;;;;;;AC3DA;AAGA;AACA;;AAEA,MAAMa,YAAY,GAAG,CAAC;EAAEC,IAAF;EAAQxB;AAAR,CAAD,KAAwB;EAC3C,MAAMyB,SAAS,GAAGD,IAAI,CAACX,IAAL,CAAUE,YAAV,CAAuBd,KAAzC;EAEA,oBACE,iDAAC,0DAAD;IAAQ,QAAQ,EAAED,QAAlB;IAA4B,KAAK,EAAEyB;EAAnC,gBACE,8EADF,eAEE,sHAFF,CADF;AAMD,CATD;;AAWO,MAAMC,IAAI,GAAG,mBAAM,iDAAC,uDAAD;EAAK,KAAK,EAAC;AAAX,EAAnB;AAEP,iEAAeH,YAAf;AAEO,MAAMI,SAAS,eAAf","sources":["webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/pages/404.js"],"sourcesContent":["import * as React from \"react\";\r\nimport { Link } from \"gatsby\";\r\n\r\nconst Layout = ({ location, title, children }) => {\r\n  const rootPath = `${__PATH_PREFIX__}/`;\r\n  const isRootPath = location.pathname === rootPath;\r\n  // let header;\r\n\r\n  // if (isRootPath) {\r\n  //   header = (\r\n  //     <h1 className=\"main-heading\">\r\n  //       <Link to=\"/\"></Link>\r\n  //     </h1>\r\n  //   );\r\n  // } else {\r\n  //   header = (\r\n  //     <Link className=\"header-link-home\" to=\"/\">\r\n  //       {/* {title} */}\r\n  //     </Link>\r\n  //   );\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      <Link to=\"/\">\r\n        <header className=\"global-header\" />\r\n        {/* <header className=\"global-header\">{header}</header> */}\r\n      </Link>\r\n      <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\r\n        <main>{children}</main>\r\n        <footer>\r\n          Â© {new Date().getFullYear()}, Built with\r\n          {` `}\r\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst Seo = ({ description, lang, title, children }) => {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            social {\r\n              twitter\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta\r\n        name=\"twitter:creator\"\r\n        content={site.siteMetadata?.social?.twitter || ``}\r\n      />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nSeo.defaultProps = {\r\n  description: ``,\r\n}\r\n\r\nSeo.propTypes = {\r\n  description: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Seo\r\n","import * as React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\nconst NotFoundPage = ({ data, location }) => {\r\n  const siteTitle = data.site.siteMetadata.title\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <h1>404: Not Found</h1>\r\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const Head = () => <Seo title=\"404: Not Found\" />\r\n\r\nexport default NotFoundPage\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["React","Link","Layout","location","title","children","rootPath","__PATH_PREFIX__","isRootPath","pathname","Date","getFullYear","PropTypes","Seo","description","lang","site","metaDescription","siteMetadata","defaultTitle","social","twitter","defaultProps","propTypes","string","isRequired","NotFoundPage","data","siteTitle","Head","pageQuery"],"sourceRoot":""}