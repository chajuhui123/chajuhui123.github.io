{"version":3,"file":"component---src-pages-404-js.js","mappings":";;;;;;;;;;;;;;AAGA,KAAME,OAAM,CAAG,CAAC,CAAEC,QAAF,CAAYC,KAAZ,CAAmBC,QAAnB,CAAD,GAAmC,CAChD,KAAMC,SAAQ,CAAI,GAAEC,EAAgB,GAApC,CACA,KAAMC,WAAU,CAAGL,QAAQ,CAACM,QAAT,GAAsBH,QAAzC,CACA,GAAII,OAAJ,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,mBACE,yEACE,iDAAC,wCAAD,EAAM,EAAE,CAAC,GAAT,eACE,2DAAQ,SAAS,CAAC,eAAlB,EADF,CADF,cAKE,wDAAK,SAAS,CAAC,gBAAf,CAAgC,oBAAmBF,UAAnD,eACE,6DAAOH,QAAP,CADF,cAEE,uEACK,GAAIM,KAAJ,GAAWC,WAAX,EADL,gBAEI,GAFJ,cAGE,sDAAG,IAAI,CAAC,0BAAR,WAHF,CAFF,CALF,CADF,CAgBD,CAnCD,CAqCA,iEAAeV,MAAf;;;;;;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA,GAMA,KAAMa,IAAG,CAAG,CAAC,CAAEC,WAAF,CAAeC,IAAf,CAAqBb,KAArB,CAA4BC,QAA5B,CAAD,GAA4C,kEACtD,KAAM,CAAEa,IAAF,EAAWJ,sDAAc,cAA/B,CAgBA,KAAMK,gBAAe,CAAGH,WAAW,EAAIE,IAAI,CAACE,YAAL,CAAkBJ,WAAzD,CACA,KAAMK,aAAY,qBAAGH,IAAI,CAACE,YAAR,6CAAG,mBAAmBhB,KAAxC,CAEA,mBACE,+GACE,8DAAQiB,YAAY,CAAI,GAAEjB,KAAM,MAAKiB,YAAa,EAA9B,CAAkCjB,KAAtD,CADF,cAEE,yDAAM,IAAI,CAAC,aAAX,CAAyB,OAAO,CAAEe,eAAlC,EAFF,cAGE,yDAAM,QAAQ,CAAC,UAAf,CAA0B,OAAO,CAAEf,KAAnC,EAHF,cAIE,yDAAM,QAAQ,CAAC,gBAAf,CAAgC,OAAO,CAAEe,eAAzC,EAJF,cAKE,yDAAM,QAAQ,CAAC,SAAf,CAAyB,OAAO,CAAC,SAAjC,EALF,cAME,yDAAM,IAAI,CAAC,cAAX,CAA0B,OAAO,CAAC,SAAlC,EANF,cAOE,yDACE,IAAI,CAAC,iBADP,CAEE,OAAO,CAAE,sBAAAD,IAAI,CAACE,YAAL,yFAAmBE,MAAnB,sEAA2BC,OAA3B,GAAuC,EAFlD,EAPF,cAWE,yDAAM,IAAI,CAAC,eAAX,CAA2B,OAAO,CAAEnB,KAApC,EAXF,cAYE,yDAAM,IAAI,CAAC,qBAAX,CAAiC,OAAO,CAAEe,eAA1C,EAZF,CAaGd,QAbH,CADF,CAiBD,CArCD,CAuCAU,GAAG,CAACS,YAAJ,CAAmB,CACjBR,WAAW,CAAG,EADG,CAAnB,CAIAD,GAAG,CAACU,SAAJ,CAAgB,CACdT,WAAW,CAAEH,0DADC,CAEdT,KAAK,CAAES,qEAFO,CAAhB,CAKA,iEAAeE,GAAf;;;;;;;;;;;;;;;;ACrDA,KAAMa,aAAY,CAAG,CAAC,CAAEC,IAAF,CAAQ1B,QAAR,CAAD,GAAwB,CAC3C,KAAM2B,UAAS,CAAGD,IAAI,CAACX,IAAL,CAAUE,YAAV,CAAuBhB,KAAzC,CAEA,mBACE,iDAAC,mEAAD,EAAQ,QAAQ,CAAED,QAAlB,CAA4B,KAAK,CAAE2B,SAAnC,eACE,4EADF,cAEE,oHAFF,CADF,CAMD,CATD,CAWO,KAAMC,KAAI,CAAG,iBAAM,iDAAC,gEAAD,EAAK,KAAK,CAAC,gBAAX,EAAnB,CAEP,iEAAeH,YAAf,EAEO,KAAMI,UAAS,aAAf","sources":["webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/pages/404.js"],"sourcesContent":["import * as React from \"react\";\r\nimport { Link } from \"gatsby\";\r\n\r\nconst Layout = ({ location, title, children }) => {\r\n  const rootPath = `${__PATH_PREFIX__}/`;\r\n  const isRootPath = location.pathname === rootPath;\r\n  let header;\r\n\r\n  // if (isRootPath) {\r\n  //   header = (\r\n  //     <h1 className=\"main-heading\">\r\n  //       <Link to=\"/\"></Link>\r\n  //     </h1>\r\n  //   );\r\n  // } else {\r\n  //   header = (\r\n  //     <Link className=\"header-link-home\" to=\"/\">\r\n  //       {/* {title} */}\r\n  //     </Link>\r\n  //   );\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      <Link to=\"/\">\r\n        <header className=\"global-header\" />\r\n        {/* <header className=\"global-header\">{header}</header> */}\r\n      </Link>\r\n      <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\r\n        <main>{children}</main>\r\n        <footer>\r\n          Â© {new Date().getFullYear()}, Built with\r\n          {` `}\r\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst Seo = ({ description, lang, title, children }) => {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            social {\r\n              twitter\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta\r\n        name=\"twitter:creator\"\r\n        content={site.siteMetadata?.social?.twitter || ``}\r\n      />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nSeo.defaultProps = {\r\n  description: ``,\r\n}\r\n\r\nSeo.propTypes = {\r\n  description: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Seo\r\n","import * as React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\nconst NotFoundPage = ({ data, location }) => {\r\n  const siteTitle = data.site.siteMetadata.title\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <h1>404: Not Found</h1>\r\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const Head = () => <Seo title=\"404: Not Found\" />\r\n\r\nexport default NotFoundPage\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["React","Link","Layout","location","title","children","rootPath","__PATH_PREFIX__","isRootPath","pathname","header","Date","getFullYear","PropTypes","useStaticQuery","Seo","description","lang","site","metaDescription","siteMetadata","defaultTitle","social","twitter","defaultProps","propTypes","string","isRequired","NotFoundPage","data","siteTitle","Head","pageQuery"],"sourceRoot":""}