{"version":3,"file":"component---cache-dev-404-page-js.js","mappings":";;;;;;;;;;;AAAa;AACb,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,kBAAkB,mBAAmB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;;;;;;;;;AC7Fa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;;AAEA,MAAMK,UAAN,SAAyBL,wDAAzB,CAAyC;EAOvCO,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;IACA,MAAM;MAAEC,IAAF;MAAQC;IAAR,IAAqB,KAAKF,KAAhC;IACA,MAAMG,SAAS,GAAGF,IAAI,CAACG,WAAL,CAAiBC,KAAjB,CAAuBC,GAAvB,CAA2BC,IAAI,IAAIA,IAAI,CAACC,IAAxC,CAAlB;IACA,MAAMC,QAAQ,GAAGb,+CAAA,CAAkBM,QAAQ,CAACS,MAA3B,CAAjB;IAEA,MAAMC,0BAA0B,GAAGH,QAAQ,CAACI,MAAT,GAAkBJ,QAAQ,CAACI,MAA3B,GAAqC,EAAxE;IAEA,KAAKC,KAAL,GAAa;MACXC,UAAU,EAAE,KADD;MAEXC,aAAa,EAAEC,IAAA,CAAYE,yBAAZ,IAAyC,KAF7C;MAGXC,aAAa,EAAEjB,SAHJ;MAIXkB,mBAAmB,EAAET,0BAJV;MAKXT,SAAS,EAAE,KAAKmB,oBAAL,CACTnB,SADS,EAETS,0BAFS;IALA,CAAb;IAUA,KAAKI,aAAL,GAAqB,KAAKA,aAAL,CAAmBO,IAAnB,CAAwB,IAAxB,CAArB;IACA,KAAKC,oBAAL,GAA4B,KAAKA,oBAAL,CAA0BD,IAA1B,CAA+B,IAA/B,CAA5B;IACA,KAAKE,sBAAL,GAA8B,KAAKA,sBAAL,CAA4BF,IAA5B,CAAiC,IAAjC,CAA9B;EACD;;EAEDG,iBAAiB,GAAG;IAClB,KAAKC,QAAL,CAAc;MACZZ,UAAU,EAAE;IADA,CAAd;EAGD;;EAEDC,aAAa,GAAG;IACd,KAAKW,QAAL,CAAc;MAAEX,aAAa,EAAE;IAAjB,CAAd;EACD;;EAEDS,sBAAsB,CAACG,KAAD,EAAQ;IAC5B,MAAMC,WAAW,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAjC;IAEA,KAAKC,YAAL,CAAkBH,WAAlB;IAEA,KAAKF,QAAL,CAAc;MACZN,mBAAmB,EAAEQ;IADT,CAAd;EAGD;;EAEDL,oBAAoB,CAACI,KAAD,EAAQ;IAC1BA,KAAK,CAACK,cAAN;IACA,MAAMC,YAAY,GAAG,CAAC,GAAG,KAAKpB,KAAL,CAAWM,aAAf,CAArB;IACA,KAAKO,QAAL,CAAc;MACZxB,SAAS,EAAE,KAAKmB,oBAAL,CACTY,YADS,EAET,KAAKpB,KAAL,CAAWO,mBAFF;IADC,CAAd;EAMD;;EAEDC,oBAAoB,CAACY,YAAD,EAAeb,mBAAf,EAAoC;IACtD,MAAMc,UAAU,GAAG,IAAIC,MAAJ,CAAY,GAAEf,mBAAoB,EAAlC,CAAnB;IACA,OAAOa,YAAY,CAACrB,MAAb,CAAoBwB,QAAQ,IAAIF,UAAU,CAACG,IAAX,CAAgBD,QAAhB,CAAhC,CAAP;EACD;;EAEDL,YAAY,CAACH,WAAD,EAAc;IACxB,MAAM;MACJ3B,QAAQ,EAAE;QAAEqC,QAAF;QAAY5B;MAAZ;IADN,IAEF,KAAKX,KAFT;IAIA,MAAMwC,SAAS,GAAG5C,+CAAA,CAAkBe,MAAlB,CAAlB;IACA6B,SAAS,CAAC3B,MAAV,GAAmBgB,WAAnB;IAEA,MAAMY,SAAS,GAAG7C,mDAAA,CAAsB4C,SAAtB,CAAlB;;IAEA,IAAI7B,MAAM,KAAM,IAAG8B,SAAU,EAA7B,EAAgC;MAC9B9C,gDAAQ,CAAE,GAAE4C,QAAS,IAAGE,SAAU,EAA1B,EAA6B;QAAEE,OAAO,EAAE;MAAX,CAA7B,CAAR;IACD;EACF;;EAEDC,MAAM,GAAG;IACP,IAAI,CAAC,KAAK9B,KAAL,CAAWC,UAAhB,EAA4B;MAC1B,OAAO,IAAP;IACD;;IAED,MAAM;MAAEwB;IAAF,IAAe,KAAKvC,KAAL,CAAWE,QAAhC;IACA,IAAI2C,WAAJ;IACA,IAAIC,UAAJ;;IACA,IAAIP,QAAQ,KAAM,GAAlB,EAAsB;MACpBM,WAAW,GAAI,oBAAf;IACD,CAFD,MAEO,IAAIN,QAAQ,CAACQ,KAAT,CAAe,CAAf,EAAkB,CAAlB,MAA0B,MAA9B,EAAqC;MAC1CD,UAAU,GAAI,MAAKP,QAAS,KAA5B;IACD,CAFM,MAEA,IAAIA,QAAQ,CAACQ,KAAT,CAAe,CAAC,CAAhB,MAAwB,GAA5B,EAAgC;MACrCF,WAAW,GAAI,YAAWN,QAAQ,CAACQ,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAAsB,KAAhD;IACD,CAFM,MAEA;MACLF,WAAW,GAAI,YAAWN,QAAS,KAAnC;IACD;;IAED,OAAO,KAAKzB,KAAL,CAAWE,aAAX,GACL,KAAKhB,KAAL,CAAWgD,SADN,gBAGL,qFACE,wGADF,eAEE,+GACyC,GADzC,eAEE,yEAAOT,QAAP,CAFF,CAFF,EAMG,KAAKvC,KAAL,CAAWgD,SAAX,gBACC,mFACE;MAAQ,OAAO,EAAE,KAAKhC;IAAtB,6BADF,CADD,gBAOC,sEACI,iHADJ,eAEE,4FAFF,MAbJ,EAkBG6B,WAAW,iBACV,qFACE,mGADF,eAEE,kJAGI,GAHJ,qBAGQ,yEAAOA,WAAP,CAHR,QAGqC,GAHrC,iEAFF,eAQE;MACE,KAAK,EAAE;QACLI,MAAM,EAAG,qBADJ;QAELC,OAAO,EAAG,KAFL;QAGLC,QAAQ,EAAG,MAHN;QAILC,UAAU,EAAG;MAJR;IADT,gBAQE;MACE,uBAAuB,EAAE;QACvBC,MAAM,EAAG;AAC3B;AACA;AACA;AACA;MALyC;IAD3B,EARF,CARF,CAnBJ,EA+CGP,UAAU,iBACT,qFACE,4GADF,eAEE,+IAGI,GAHJ,qBAGQ,yEAAOA,UAAP,CAHR,QAGoC,GAHpC,6DAFF,eAQE;MACE,KAAK,EAAE;QACLG,MAAM,EAAG,qBADJ;QAELC,OAAO,EAAG,KAFL;QAGLC,QAAQ,EAAG,MAHN;QAILC,UAAU,EAAG;MAJR;IADT,gBAQE;MACE,uBAAuB,EAAE;QACvBC,MAAM,EAAG;AAC3B;AACA;AACA;MAJyC;IAD3B,EARF,CARF,CAhDJ,EA2EG,KAAKvC,KAAL,CAAWM,aAAX,CAAyBkC,MAAzB,GAAkC,CAAlC,iBACC,qFACE,sEADF,eAEE,6JAFF,eAME,sFAAgB,KAAKtD,KAAL,CAAWC,IAAX,CAAgBsD,eAAhB,CAAgClD,KAAhC,CAAsCiD,MAAtD,MANF,eAOE,uEACG,KAAKtD,KAAL,CAAWC,IAAX,CAAgBsD,eAAhB,CAAgClD,KAAhC,CAAsCC,GAAtC,CAA0CC,IAAI,IAAI;MACjD,MAAMiD,aAAa,GAAI,QAAOjD,IAAI,CAACiD,aAAc,EAAjD;MACA,oBACE;QAAI,GAAG,EAAEA;MAAT,gBACE;QAAG,IAAI,EAAEA;MAAT,GAAyBA,aAAzB,CADF,CADF;IAKD,CAPA,CADH,CAPF,eAiBE,kFAEG,KAAK1C,KAAL,CAAWX,SAAX,CAAqBmD,MAArB,IAA+B,KAAKxC,KAAL,CAAWM,aAAX,CAAyBkC,MAAxD,GACI,GAAE,KAAKxC,KAAL,CAAWX,SAAX,CAAqBmD,MAAO,IAAG,KAAKxC,KAAL,CAAWM,aAAX,CAAyBkC,MAAO,EADrE,GAEG,KAAKxC,KAAL,CAAWM,aAAX,CAAyBkC,MAJ/B,MAjBF,eAyBE;MAAM,QAAQ,EAAE,KAAK9B;IAArB,gBACE,kGAEE;MACE,IAAI,EAAC,MADP;MAEE,EAAE,EAAC,QAFL;MAGE,WAAW,EAAC,iBAHd;MAIE,KAAK,EAAE,KAAKV,KAAL,CAAWO,mBAJpB;MAKE,QAAQ,EAAE,KAAKI;IALjB,EAFF,CADF,eAWE;MAAO,IAAI,EAAC,QAAZ;MAAqB,KAAK,EAAC;IAA3B,EAXF,CAzBF,eAsCE,uEACG,KAAKX,KAAL,CAAWX,SAAX,CAAqBG,GAArB,CACC,CAAC+B,QAAD,EAAWoB,KAAX,KACEA,KAAK,GAAG,GAAR,iBACE;MAAI,GAAG,EAAEpB;IAAT,gBACE,2DAAC,wCAAD;MAAM,EAAE,EAAEA;IAAV,GAAqBA,QAArB,CADF,CAHL,CADH,EASG,KAAKvB,KAAL,CAAWX,SAAX,CAAqBmD,MAArB,GAA8B,GAA9B,iBACC;MAAG,KAAK,EAAE;QAAEI,UAAU,EAAG;MAAf;IAAV,eACW,KAAK5C,KAAL,CAAWX,SAAX,CAAqBmD,MAArB,GAA8B,GADzC,WAVJ,CAtCF,CA5EJ,CAHF;EAwID;;AA3OsC;;AAAnCzD,WACG8D,YAAY;EACjB1D,IAAI,EAAER,0DADW;EAEjBuD,SAAS,EAAEvD,2DAFM;EAGjBS,QAAQ,EAAET,0DAAgBmE;AAHT;AA6OrB,iEAAe/D,UAAf,GAEA;;AACA;;AACO,MAAMiE,UAAU,eAAhB;AAcP;;;;;;;;;;ACrQa;AACb,wBAAwB,mBAAO,CAAC,oEAAmB;AACnD,wBAAwB,mBAAO,CAAC,0EAAsB;AACtD,qBAAqB,mBAAO,CAAC,8DAAgB;AAC7C,qBAAqB,mBAAO,CAAC,sDAAY;AACzeAAe;AACf,aAAa;AACb;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,gBAAgB;AAChB;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,wDAAwD,2CAA2C;AACnG;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,yDAAyD,YAAY;AACrE;AACA;AACA;AACA;AACA,oBAAoB,YAAY;AAChC;AACA;AACA;AACA;AACA,aAAa,2CAA2C;AACxD;AACA;AACA,WAAW,IAAI,EAAE,YAAY,EAAE,KAAK;AACpC;AACA;AACA,YAAY;AACZ;AACA;AACA,EAAE;AACF;AACA,QAAQ,gCAAgC;AACxC;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;;;;;;;;;;;ACnZa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACrBa;AACb,6EAA6E,2CAA2C","sources":["webpack://gatsby-starter-blog/./node_modules/decode-uri-component/index.js","webpack://gatsby-starter-blog/./node_modules/filter-obj/index.js","webpack://gatsby-starter-blog/./.cache/dev-404-page.js","webpack://gatsby-starter-blog/./node_modules/query-string/index.js","webpack://gatsby-starter-blog/./node_modules/split-on-first/index.js","webpack://gatsby-starter-blog/./node_modules/strict-uri-encode/index.js"],"sourcesContent":["'use strict';\r\nvar token = '%[a-f0-9]{2}';\r\nvar singleMatcher = new RegExp(token, 'gi');\r\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\r\n\r\nfunction decodeComponents(components, split) {\r\n\ttry {\r\n\t\t// Try to decode the entire string first\r\n\t\treturn decodeURIComponent(components.join(''));\r\n\t} catch (err) {\r\n\t\t// Do nothing\r\n\t}\r\n\r\n\tif (components.length === 1) {\r\n\t\treturn components;\r\n\t}\r\n\r\n\tsplit = split || 1;\r\n\r\n\t// Split the array in 2 parts\r\n\tvar left = components.slice(0, split);\r\n\tvar right = components.slice(split);\r\n\r\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\r\n}\r\n\r\nfunction decode(input) {\r\n\ttry {\r\n\t\treturn decodeURIComponent(input);\r\n\t} catch (err) {\r\n\t\tvar tokens = input.match(singleMatcher);\r\n\r\n\t\tfor (var i = 1; i < tokens.length; i++) {\r\n\t\t\tinput = decodeComponents(tokens, i).join('');\r\n\r\n\t\t\ttokens = input.match(singleMatcher);\r\n\t\t}\r\n\r\n\t\treturn input;\r\n\t}\r\n}\r\n\r\nfunction customDecodeURIComponent(input) {\r\n\t// Keep track of all the replacements and prefill the map with the `BOM`\r\n\tvar replaceMap = {\r\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\r\n\t\t'%FF%FE': '\\uFFFD\\uFFFD'\r\n\t};\r\n\r\n\tvar match = multiMatcher.exec(input);\r\n\twhile (match) {\r\n\t\ttry {\r\n\t\t\t// Decode as big chunks as possible\r\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\r\n\t\t} catch (err) {\r\n\t\t\tvar result = decode(match[0]);\r\n\r\n\t\t\tif (result !== match[0]) {\r\n\t\t\t\treplaceMap[match[0]] = result;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tmatch = multiMatcher.exec(input);\r\n\t}\r\n\r\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\r\n\treplaceMap['%C2'] = '\\uFFFD';\r\n\r\n\tvar entries = Object.keys(replaceMap);\r\n\r\n\tfor (var i = 0; i < entries.length; i++) {\r\n\t\t// Replace all decoded components\r\n\t\tvar key = entries[i];\r\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\r\n\t}\r\n\r\n\treturn input;\r\n}\r\n\r\nmodule.exports = function (encodedURI) {\r\n\tif (typeof encodedURI !== 'string') {\r\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\r\n\t}\r\n\r\n\ttry {\r\n\t\tencodedURI = encodedURI.replace(/\\+/g, ' ');\r\n\r\n\t\t// Try the built in decoder first\r\n\t\treturn decodeURIComponent(encodedURI);\r\n\t} catch (err) {\r\n\t\t// Fallback to a more advanced decoder\r\n\t\treturn customDecodeURIComponent(encodedURI);\r\n\t}\r\n};\r\n","'use strict';\r\nmodule.exports = function (obj, predicate) {\r\n\tvar ret = {};\r\n\tvar keys = Object.keys(obj);\r\n\tvar isArr = Array.isArray(predicate);\r\n\r\n\tfor (var i = 0; i < keys.length; i++) {\r\n\t\tvar key = keys[i];\r\n\t\tvar val = obj[key];\r\n\r\n\t\tif (isArr ? predicate.indexOf(key) !== -1 : predicate(key, val, obj)) {\r\n\t\t\tret[key] = val;\r\n\t\t}\r\n\t}\r\n\r\n\treturn ret;\r\n};\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { graphql, Link, navigate } from \"gatsby\"\r\nimport queryString from \"query-string\"\r\n\r\nclass Dev404Page extends React.Component {\r\n  static propTypes = {\r\n    data: PropTypes.object,\r\n    custom404: PropTypes.element,\r\n    location: PropTypes.object,\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    const { data, location } = this.props\r\n    const pagePaths = data.allSitePage.nodes.map(node => node.path)\r\n    const urlState = queryString.parse(location.search)\r\n\r\n    const initialPagePathSearchTerms = urlState.filter ? urlState.filter : ``\r\n\r\n    this.state = {\r\n      hasMounted: false,\r\n      showCustom404: process.env.GATSBY_DISABLE_CUSTOM_404 || false,\r\n      initPagePaths: pagePaths,\r\n      pagePathSearchTerms: initialPagePathSearchTerms,\r\n      pagePaths: this.getFilteredPagePaths(\r\n        pagePaths,\r\n        initialPagePathSearchTerms\r\n      ),\r\n    }\r\n    this.showCustom404 = this.showCustom404.bind(this)\r\n    this.handlePagePathSearch = this.handlePagePathSearch.bind(this)\r\n    this.handleSearchTermChange = this.handleSearchTermChange.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      hasMounted: true,\r\n    })\r\n  }\r\n\r\n  showCustom404() {\r\n    this.setState({ showCustom404: true })\r\n  }\r\n\r\n  handleSearchTermChange(event) {\r\n    const searchValue = event.target.value\r\n\r\n    this.setSearchUrl(searchValue)\r\n\r\n    this.setState({\r\n      pagePathSearchTerms: searchValue,\r\n    })\r\n  }\r\n\r\n  handlePagePathSearch(event) {\r\n    event.preventDefault()\r\n    const allPagePaths = [...this.state.initPagePaths]\r\n    this.setState({\r\n      pagePaths: this.getFilteredPagePaths(\r\n        allPagePaths,\r\n        this.state.pagePathSearchTerms\r\n      ),\r\n    })\r\n  }\r\n\r\n  getFilteredPagePaths(allPagePaths, pagePathSearchTerms) {\r\n    const searchTerm = new RegExp(`${pagePathSearchTerms}`)\r\n    return allPagePaths.filter(pagePath => searchTerm.test(pagePath))\r\n  }\r\n\r\n  setSearchUrl(searchValue) {\r\n    const {\r\n      location: { pathname, search },\r\n    } = this.props\r\n\r\n    const searchMap = queryString.parse(search)\r\n    searchMap.filter = searchValue\r\n\r\n    const newSearch = queryString.stringify(searchMap)\r\n\r\n    if (search !== `?${newSearch}`) {\r\n      navigate(`${pathname}?${newSearch}`, { replace: true })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.hasMounted) {\r\n      return null\r\n    }\r\n\r\n    const { pathname } = this.props.location\r\n    let newFilePath\r\n    let newAPIPath\r\n    if (pathname === `/`) {\r\n      newFilePath = `src/pages/index.js`\r\n    } else if (pathname.slice(0, 4) === `/api`) {\r\n      newAPIPath = `src${pathname}.js`\r\n    } else if (pathname.slice(-1) === `/`) {\r\n      newFilePath = `src/pages${pathname.slice(0, -1)}.js`\r\n    } else {\r\n      newFilePath = `src/pages${pathname}.js`\r\n    }\r\n\r\n    return this.state.showCustom404 ? (\r\n      this.props.custom404\r\n    ) : (\r\n      <div>\r\n        <h1>Gatsby.js development 404 page</h1>\r\n        <p>\r\n          There's not a page or function yet at{` `}\r\n          <code>{pathname}</code>\r\n        </p>\r\n        {this.props.custom404 ? (\r\n          <p>\r\n            <button onClick={this.showCustom404}>\r\n              Preview custom 404 page\r\n            </button>\r\n          </p>\r\n        ) : (\r\n          <p>\r\n            {`A custom 404 page wasn't detected - if you would like to add one, create a component in your site directory at `}\r\n            <code>src/pages/404.js</code>.\r\n          </p>\r\n        )}\r\n        {newFilePath && (\r\n          <div>\r\n            <h2>Create a page at this url</h2>\r\n            <p>\r\n              Create a React.js component like the following in your site\r\n              directory at\r\n              {` `}\"<code>{newFilePath}</code>\"{` `}\r\n              and then refresh to show the new page component you created.\r\n            </p>\r\n            <pre\r\n              style={{\r\n                border: `1px solid lightgray`,\r\n                padding: `8px`,\r\n                maxWidth: `80ch`,\r\n                background: `#f3f3f3`,\r\n              }}\r\n            >\r\n              <code\r\n                dangerouslySetInnerHTML={{\r\n                  __html: `import * as React from \"react\"\r\n\r\nexport default function Component () {\r\n  return \"Hello world\"\r\n}`,\r\n                }}\r\n              />\r\n            </pre>\r\n          </div>\r\n        )}\r\n        {newAPIPath && (\r\n          <div>\r\n            <h2>Create an API function at this url</h2>\r\n            <p>\r\n              Create a javascript file like the following in your site directory\r\n              at\r\n              {` `}\"<code>{newAPIPath}</code>\"{` `}\r\n              and refresh to execute the new API function you created.\r\n            </p>\r\n            <pre\r\n              style={{\r\n                border: `1px solid lightgray`,\r\n                padding: `8px`,\r\n                maxWidth: `80ch`,\r\n                background: `#f3f3f3`,\r\n              }}\r\n            >\r\n              <code\r\n                dangerouslySetInnerHTML={{\r\n                  __html: `\r\nexport default function API (req, res) {\r\n  res.json({ hello: \"world\" })\r\n}`,\r\n                }}\r\n              />\r\n            </pre>\r\n          </div>\r\n        )}\r\n        {this.state.initPagePaths.length > 0 && (\r\n          <div>\r\n            <hr />\r\n            <p>\r\n              If you were trying to reach another page or function, perhaps you\r\n              can find it below.\r\n            </p>\r\n            <h2>Functions ({this.props.data.allSiteFunction.nodes.length})</h2>\r\n            <ul>\r\n              {this.props.data.allSiteFunction.nodes.map(node => {\r\n                const functionRoute = `/api/${node.functionRoute}`\r\n                return (\r\n                  <li key={functionRoute}>\r\n                    <a href={functionRoute}>{functionRoute}</a>\r\n                  </li>\r\n                )\r\n              })}\r\n            </ul>\r\n            <h2>\r\n              Pages (\r\n              {this.state.pagePaths.length != this.state.initPagePaths.length\r\n                ? `${this.state.pagePaths.length}/${this.state.initPagePaths.length}`\r\n                : this.state.initPagePaths.length}\r\n              )\r\n            </h2>\r\n\r\n            <form onSubmit={this.handlePagePathSearch}>\r\n              <label>\r\n                Search:\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"search\"\r\n                  placeholder=\"Search pages...\"\r\n                  value={this.state.pagePathSearchTerms}\r\n                  onChange={this.handleSearchTermChange}\r\n                />\r\n              </label>\r\n              <input type=\"submit\" value=\"Submit\" />\r\n            </form>\r\n            <ul>\r\n              {this.state.pagePaths.map(\r\n                (pagePath, index) =>\r\n                  index < 100 && (\r\n                    <li key={pagePath}>\r\n                      <Link to={pagePath}>{pagePath}</Link>\r\n                    </li>\r\n                  )\r\n              )}\r\n              {this.state.pagePaths.length > 100 && (\r\n                <p style={{ fontWeight: `bold` }}>\r\n                  ... and {this.state.pagePaths.length - 100} more.\r\n                </p>\r\n              )}\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Dev404Page\r\n\r\n// ESLint is complaining about the backslash in regex\r\n/* eslint-disable */\r\nexport const pagesQuery = graphql`\r\n  query PagesQuery {\r\n    allSiteFunction {\r\n      nodes {\r\n        functionRoute\r\n      }\r\n    }\r\n    allSitePage(filter: { path: { regex: \"/^(?!\\/dev-404-page).+$/\" } }) {\r\n      nodes {\r\n        path\r\n      }\r\n    }\r\n  }\r\n`\r\n/* eslint-enable */\r\n","'use strict';\r\nconst strictUriEncode = require('strict-uri-encode');\r\nconst decodeComponent = require('decode-uri-component');\r\nconst splitOnFirst = require('split-on-first');\r\nconst filterObject = require('filter-obj');\r\n\r\nconst isNullOrUndefined = value => value === null || value === undefined;\r\n\r\nfunction encoderForArrayFormat(options) {\r\n\tswitch (options.arrayFormat) {\r\n\t\tcase 'index':\r\n\t\t\treturn key => (result, value) => {\r\n\t\t\t\tconst index = result.length;\r\n\r\n\t\t\t\tif (\r\n\t\t\t\t\tvalue === undefined ||\r\n\t\t\t\t\t(options.skipNull && value === null) ||\r\n\t\t\t\t\t(options.skipEmptyString && value === '')\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (value === null) {\r\n\t\t\t\t\treturn [...result, [encode(key, options), '[', index, ']'].join('')];\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn [\r\n\t\t\t\t\t...result,\r\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')\r\n\t\t\t\t];\r\n\t\t\t};\r\n\r\n\t\tcase 'bracket':\r\n\t\t\treturn key => (result, value) => {\r\n\t\t\t\tif (\r\n\t\t\t\t\tvalue === undefined ||\r\n\t\t\t\t\t(options.skipNull && value === null) ||\r\n\t\t\t\t\t(options.skipEmptyString && value === '')\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (value === null) {\r\n\t\t\t\t\treturn [...result, [encode(key, options), '[]'].join('')];\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn [...result, [encode(key, options), '[]=', encode(value, options)].join('')];\r\n\t\t\t};\r\n\r\n\t\tcase 'comma':\r\n\t\tcase 'separator':\r\n\t\t\treturn key => (result, value) => {\r\n\t\t\t\tif (value === null || value === undefined || value.length === 0) {\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (result.length === 0) {\r\n\t\t\t\t\treturn [[encode(key, options), '=', encode(value, options)].join('')];\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn key => (result, value) => {\r\n\t\t\t\tif (\r\n\t\t\t\t\tvalue === undefined ||\r\n\t\t\t\t\t(options.skipNull && value === null) ||\r\n\t\t\t\t\t(options.skipEmptyString && value === '')\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (value === null) {\r\n\t\t\t\t\treturn [...result, encode(key, options)];\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn [...result, [encode(key, options), '=', encode(value, options)].join('')];\r\n\t\t\t};\r\n\t}\r\n}\r\n\r\nfunction parserForArrayFormat(options) {\r\n\tlet result;\r\n\r\n\tswitch (options.arrayFormat) {\r\n\t\tcase 'index':\r\n\t\t\treturn (key, value, accumulator) => {\r\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\r\n\r\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\r\n\r\n\t\t\t\tif (!result) {\r\n\t\t\t\t\taccumulator[key] = value;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (accumulator[key] === undefined) {\r\n\t\t\t\t\taccumulator[key] = {};\r\n\t\t\t\t}\r\n\r\n\t\t\t\taccumulator[key][result[1]] = value;\r\n\t\t\t};\r\n\r\n\t\tcase 'bracket':\r\n\t\t\treturn (key, value, accumulator) => {\r\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\r\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\r\n\r\n\t\t\t\tif (!result) {\r\n\t\t\t\t\taccumulator[key] = value;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (accumulator[key] === undefined) {\r\n\t\t\t\t\taccumulator[key] = [value];\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\r\n\t\t\t};\r\n\r\n\t\tcase 'comma':\r\n\t\tcase 'separator':\r\n\t\t\treturn (key, value, accumulator) => {\r\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\r\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\r\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\r\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : value === null ? value : decode(value, options);\r\n\t\t\t\taccumulator[key] = newValue;\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn (key, value, accumulator) => {\r\n\t\t\t\tif (accumulator[key] === undefined) {\r\n\t\t\t\t\taccumulator[key] = value;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\r\n\t\t\t};\r\n\t}\r\n}\r\n\r\nfunction validateArrayFormatSeparator(value) {\r\n\tif (typeof value !== 'string' || value.length !== 1) {\r\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\r\n\t}\r\n}\r\n\r\nfunction encode(value, options) {\r\n\tif (options.encode) {\r\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\r\n\t}\r\n\r\n\treturn value;\r\n}\r\n\r\nfunction decode(value, options) {\r\n\tif (options.decode) {\r\n\t\treturn decodeComponent(value);\r\n\t}\r\n\r\n\treturn value;\r\n}\r\n\r\nfunction keysSorter(input) {\r\n\tif (Array.isArray(input)) {\r\n\t\treturn input.sort();\r\n\t}\r\n\r\n\tif (typeof input === 'object') {\r\n\t\treturn keysSorter(Object.keys(input))\r\n\t\t\t.sort((a, b) => Number(a) - Number(b))\r\n\t\t\t.map(key => input[key]);\r\n\t}\r\n\r\n\treturn input;\r\n}\r\n\r\nfunction removeHash(input) {\r\n\tconst hashStart = input.indexOf('#');\r\n\tif (hashStart !== -1) {\r\n\t\tinput = input.slice(0, hashStart);\r\n\t}\r\n\r\n\treturn input;\r\n}\r\n\r\nfunction getHash(url) {\r\n\tlet hash = '';\r\n\tconst hashStart = url.indexOf('#');\r\n\tif (hashStart !== -1) {\r\n\t\thash = url.slice(hashStart);\r\n\t}\r\n\r\n\treturn hash;\r\n}\r\n\r\nfunction extract(input) {\r\n\tinput = removeHash(input);\r\n\tconst queryStart = input.indexOf('?');\r\n\tif (queryStart === -1) {\r\n\t\treturn '';\r\n\t}\r\n\r\n\treturn input.slice(queryStart + 1);\r\n}\r\n\r\nfunction parseValue(value, options) {\r\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\r\n\t\tvalue = Number(value);\r\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\r\n\t\tvalue = value.toLowerCase() === 'true';\r\n\t}\r\n\r\n\treturn value;\r\n}\r\n\r\nfunction parse(query, options) {\r\n\toptions = Object.assign({\r\n\t\tdecode: true,\r\n\t\tsort: true,\r\n\t\tarrayFormat: 'none',\r\n\t\tarrayFormatSeparator: ',',\r\n\t\tparseNumbers: false,\r\n\t\tparseBooleans: false\r\n\t}, options);\r\n\r\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\r\n\r\n\tconst formatter = parserForArrayFormat(options);\r\n\r\n\t// Create an object with no prototype\r\n\tconst ret = Object.create(null);\r\n\r\n\tif (typeof query !== 'string') {\r\n\t\treturn ret;\r\n\t}\r\n\r\n\tquery = query.trim().replace(/^[?#&]/, '');\r\n\r\n\tif (!query) {\r\n\t\treturn ret;\r\n\t}\r\n\r\n\tfor (const param of query.split('&')) {\r\n\t\tif (param === '') {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tlet [key, value] = splitOnFirst(options.decode ? param.replace(/\\+/g, ' ') : param, '=');\r\n\r\n\t\t// Missing `=` should be `null`:\r\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\r\n\t\tvalue = value === undefined ? null : ['comma', 'separator'].includes(options.arrayFormat) ? value : decode(value, options);\r\n\t\tformatter(decode(key, options), value, ret);\r\n\t}\r\n\r\n\tfor (const key of Object.keys(ret)) {\r\n\t\tconst value = ret[key];\r\n\t\tif (typeof value === 'object' && value !== null) {\r\n\t\t\tfor (const k of Object.keys(value)) {\r\n\t\t\t\tvalue[k] = parseValue(value[k], options);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tret[key] = parseValue(value, options);\r\n\t\t}\r\n\t}\r\n\r\n\tif (options.sort === false) {\r\n\t\treturn ret;\r\n\t}\r\n\r\n\treturn (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {\r\n\t\tconst value = ret[key];\r\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\r\n\t\t\t// Sort object keys, not values\r\n\t\t\tresult[key] = keysSorter(value);\r\n\t\t} else {\r\n\t\t\tresult[key] = value;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}, Object.create(null));\r\n}\r\n\r\nexports.extract = extract;\r\nexports.parse = parse;\r\n\r\nexports.stringify = (object, options) => {\r\n\tif (!object) {\r\n\t\treturn '';\r\n\t}\r\n\r\n\toptions = Object.assign({\r\n\t\tencode: true,\r\n\t\tstrict: true,\r\n\t\tarrayFormat: 'none',\r\n\t\tarrayFormatSeparator: ','\r\n\t}, options);\r\n\r\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\r\n\r\n\tconst shouldFilter = key => (\r\n\t\t(options.skipNull && isNullOrUndefined(object[key])) ||\r\n\t\t(options.skipEmptyString && object[key] === '')\r\n\t);\r\n\r\n\tconst formatter = encoderForArrayFormat(options);\r\n\r\n\tconst objectCopy = {};\r\n\r\n\tfor (const key of Object.keys(object)) {\r\n\t\tif (!shouldFilter(key)) {\r\n\t\t\tobjectCopy[key] = object[key];\r\n\t\t}\r\n\t}\r\n\r\n\tconst keys = Object.keys(objectCopy);\r\n\r\n\tif (options.sort !== false) {\r\n\t\tkeys.sort(options.sort);\r\n\t}\r\n\r\n\treturn keys.map(key => {\r\n\t\tconst value = object[key];\r\n\r\n\t\tif (value === undefined) {\r\n\t\t\treturn '';\r\n\t\t}\r\n\r\n\t\tif (value === null) {\r\n\t\t\treturn encode(key, options);\r\n\t\t}\r\n\r\n\t\tif (Array.isArray(value)) {\r\n\t\t\treturn value\r\n\t\t\t\t.reduce(formatter(key), [])\r\n\t\t\t\t.join('&');\r\n\t\t}\r\n\r\n\t\treturn encode(key, options) + '=' + encode(value, options);\r\n\t}).filter(x => x.length > 0).join('&');\r\n};\r\n\r\nexports.parseUrl = (url, options) => {\r\n\toptions = Object.assign({\r\n\t\tdecode: true\r\n\t}, options);\r\n\r\n\tconst [url_, hash] = splitOnFirst(url, '#');\r\n\r\n\treturn Object.assign(\r\n\t\t{\r\n\t\t\turl: url_.split('?')[0] || '',\r\n\t\t\tquery: parse(extract(url), options)\r\n\t\t},\r\n\t\toptions && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}\r\n\t);\r\n};\r\n\r\nexports.stringifyUrl = (object, options) => {\r\n\toptions = Object.assign({\r\n\t\tencode: true,\r\n\t\tstrict: true\r\n\t}, options);\r\n\r\n\tconst url = removeHash(object.url).split('?')[0] || '';\r\n\tconst queryFromUrl = exports.extract(object.url);\r\n\tconst parsedQueryFromUrl = exports.parse(queryFromUrl, {sort: false});\r\n\r\n\tconst query = Object.assign(parsedQueryFromUrl, object.query);\r\n\tlet queryString = exports.stringify(query, options);\r\n\tif (queryString) {\r\n\t\tqueryString = `?${queryString}`;\r\n\t}\r\n\r\n\tlet hash = getHash(object.url);\r\n\tif (object.fragmentIdentifier) {\r\n\t\thash = `#${encode(object.fragmentIdentifier, options)}`;\r\n\t}\r\n\r\n\treturn `${url}${queryString}${hash}`;\r\n};\r\n\r\nexports.pick = (input, filter, options) => {\r\n\toptions = Object.assign({\r\n\t\tparseFragmentIdentifier: true\r\n\t}, options);\r\n\r\n\tconst {url, query, fragmentIdentifier} = exports.parseUrl(input, options);\r\n\treturn exports.stringifyUrl({\r\n\t\turl,\r\n\t\tquery: filterObject(query, filter),\r\n\t\tfragmentIdentifier\r\n\t}, options);\r\n};\r\n\r\nexports.exclude = (input, filter, options) => {\r\n\tconst exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);\r\n\r\n\treturn exports.pick(input, exclusionFilter, options);\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = (string, separator) => {\r\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\r\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\r\n\t}\r\n\r\n\tif (separator === '') {\r\n\t\treturn [string];\r\n\t}\r\n\r\n\tconst separatorIndex = string.indexOf(separator);\r\n\r\n\tif (separatorIndex === -1) {\r\n\t\treturn [string];\r\n\t}\r\n\r\n\treturn [\r\n\t\tstring.slice(0, separatorIndex),\r\n\t\tstring.slice(separatorIndex + separator.length)\r\n\t];\r\n};\r\n","'use strict';\r\nmodule.exports = str => encodeURIComponent(str).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\r\n"],"names":["React","PropTypes","Link","navigate","queryString","Dev404Page","Component","constructor","props","data","location","pagePaths","allSitePage","nodes","map","node","path","urlState","parse","search","initialPagePathSearchTerms","filter","state","hasMounted","showCustom404","process","env","GATSBY_DISABLE_CUSTOM_404","initPagePaths","pagePathSearchTerms","getFilteredPagePaths","bind","handlePagePathSearch","handleSearchTermChange","componentDidMount","setState","event","searchValue","target","value","setSearchUrl","preventDefault","allPagePaths","searchTerm","RegExp","pagePath","test","pathname","searchMap","newSearch","stringify","replace","render","newFilePath","newAPIPath","slice","custom404","border","padding","maxWidth","background","__html","length","allSiteFunction","functionRoute","index","fontWeight","propTypes","object","element","pagesQuery"],"sourceRoot":""}